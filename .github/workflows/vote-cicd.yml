name: Build and Push Vote Docker Image

on:
  push:
    paths:
      - 'vote/**'
      - '.github/workflows/vote-cicd.yml'
  pull_request:
    paths:
      - 'vote/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate incremental image tag
        id: set-tag
        run: echo "tag=vote-${{ github.run_number }}" >> "$GITHUB_OUTPUT"

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./vote
          file: vote/Dockerfile
          load: true
          tags: vote-app-image:temp

      - name: Tag image with ACR path
        run: docker tag vote-app-image:temp ${{ secrets.ACR_LOGIN_SERVER }}/vote-app-image:${{ steps.set-tag.outputs.tag }}

      - name: Push Docker image to ACR
        run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/vote-app-image:${{ steps.set-tag.outputs.tag }}

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensures image is built before deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

      - name: Update image in deployment manifest
        run: |
          export IMAGE="${{ secrets.ACR_LOGIN_SERVER }}/vote-app-image:vote-${{ github.run_number }}"
          sed -i "s|image:.*|image: $IMAGE|g" ./k8s-specifications/vote-deployment.yaml

      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s-specification/redis-service.yaml
          kubectl apply -f ./k8s-specification/redis-deployment.yaml
          kubectl apply -f ./k8s-specifications/vote-service.yaml
          kubectl apply -f ./k8s-specifications/vote-deployment.yaml


  #    - name: Deploy to AKS
  #      run: |
  #        IMAGE=${{ secrets.ACR_LOGIN_SERVER }}/vote-app-image:${{ needs.build-and-push.outputs.set-tag.outputs.tag }}

  #        kubectl create deployment vote-app --image=$IMAGE --dry-run=client -o yaml | kubectl apply -f -
  #        kubectl expose deployment vote-app --port=80 --target-port=80 --type=LoadBalancer --name=vote-service || true