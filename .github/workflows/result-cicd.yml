name: Build and push Result Docker Image

on:
  push:
    paths:
      - 'result/**'
      - '.github/workflows/result-cicd.yml'
  pull_request:
    paths:
      - 'result/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU for cross-arch builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate incremental image tag
        id: set-tag
        run: echo "tag=result-${{ github.run_number }}" >> "$GITHUB_OUTPUT"

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./result
          file: result/Dockerfile
          platforms: linux/arm64
          load: true
          tags: result-app-image:temp

      - name: Tag image with ACR path
        run: docker tag result-app-image:temp ${{ secrets.ACR_LOGIN_SERVER }}/result-app-image:${{ steps.set-tag.outputs.tag }}

      - name: Push Docker image to ACR
        run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/result-app-image:${{ steps.set-tag.outputs.tag }}

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensures image is built before deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

      - name: Update image in deployment manifest
        run: |
          export IMAGE="${{ secrets.ACR_LOGIN_SERVER }}/result-app-image:result-${{ github.run_number }}"
          sed -i "s|image:.*|image: $IMAGE|g" ./k8s-specifications/result-deployment.yaml

      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s-specifications/db-service.yaml
          kubectl apply -f ./k8s-specifications/db-deployment.yaml
          kubectl apply -f ./k8s-specifications/result-service.yaml
          kubectl apply -f ./k8s-specifications/result-deployment.yaml